# This is an ImageJ script to access bins of size, preprocess them 
# individually and count synaptic puncta.
#
# Astrocytic support of synapses is assessed by measuring homer1+ 
# synapse densities around astrocytes.
# Therefore, images of 212x212 um with central core of Ast is 
# loaded as raw .lsm file into imageJ and devided into 17 rois of 
# 27x27um that represent center - close - distant one / mid - distant - outside.
#
# First, after aligning ROIs in 2D image around astrocyte's core, 
# we extract all 17 ROIs as individual images from ImageJ's 'ROI 
# Manager' in a not as convenient, but straight forward way.

roiManager("Select", 0);
run("Duplicate...", "duplicate");
run("Put Behind [tab]"); 
roiManager("Select", 1);
run("Duplicate...", "duplicate");
run("Put Behind [tab]"); 
run("Put Behind [tab]"); 
roiManager("Select", 2);
run("Duplicate...", "duplicate");
run("Put Behind [tab]"); 
run("Put Behind [tab]"); 
run("Put Behind [tab]"); 
roiManager("Select", 3);
run("Duplicate...", "duplicate");
run("Put Behind [tab]");
run("Put Behind [tab]"); 
run("Put Behind [tab]"); 
run("Put Behind [tab]");  
roiManager("Select", 4);
run("Duplicate...", "duplicate");
run("Put Behind [tab]"); 
run("Put Behind [tab]");
run("Put Behind [tab]"); 
run("Put Behind [tab]"); 
run("Put Behind [tab]");  
roiManager("Select", 5);
run("Duplicate...", "duplicate");
run("Put Behind [tab]");
run("Put Behind [tab]"); 
run("Put Behind [tab]");
run("Put Behind [tab]"); 
run("Put Behind [tab]"); 
run("Put Behind [tab]"); 
roiManager("Select", 6);
run("Duplicate...", "duplicate");
run("Put Behind [tab]");
run("Put Behind [tab]");
run("Put Behind [tab]"); 
run("Put Behind [tab]");
run("Put Behind [tab]"); 
run("Put Behind [tab]"); 
run("Put Behind [tab]"); 
roiManager("Select", 7);
run("Duplicate...", "duplicate");
run("Put Behind [tab]");
run("Put Behind [tab]");
run("Put Behind [tab]");
run("Put Behind [tab]"); 
run("Put Behind [tab]");
run("Put Behind [tab]"); 
run("Put Behind [tab]"); 
run("Put Behind [tab]"); 
roiManager("Select", 8);
run("Duplicate...", "duplicate");
run("Put Behind [tab]"); 
run("Put Behind [tab]");
run("Put Behind [tab]");
run("Put Behind [tab]");
run("Put Behind [tab]"); 
run("Put Behind [tab]");
run("Put Behind [tab]"); 
run("Put Behind [tab]"); 
run("Put Behind [tab]"); 
roiManager("Select", 9);
run("Duplicate...", "duplicate");
run("Put Behind [tab]"); 
run("Put Behind [tab]");
run("Put Behind [tab]");
run("Put Behind [tab]");
run("Put Behind [tab]"); 
run("Put Behind [tab]");
run("Put Behind [tab]"); 
run("Put Behind [tab]"); 
run("Put Behind [tab]");
run("Put Behind [tab]");
roiManager("Select", 10);
run("Duplicate...", "duplicate");
run("Put Behind [tab]"); 
run("Put Behind [tab]"); 
run("Put Behind [tab]");
run("Put Behind [tab]");
run("Put Behind [tab]");
run("Put Behind [tab]");
run("Put Behind [tab]");
run("Put Behind [tab]"); 
run("Put Behind [tab]");
run("Put Behind [tab]"); 
run("Put Behind [tab]");
roiManager("Select", 11);
run("Duplicate...", "duplicate");
run("Put Behind [tab]");
run("Put Behind [tab]"); 
run("Put Behind [tab]"); 
run("Put Behind [tab]");
run("Put Behind [tab]");
run("Put Behind [tab]");
run("Put Behind [tab]");
run("Put Behind [tab]");
run("Put Behind [tab]"); 
run("Put Behind [tab]");
run("Put Behind [tab]"); 
run("Put Behind [tab]");
roiManager("Select", 12);
run("Duplicate...", "duplicate");
run("Put Behind [tab]"); 
run("Put Behind [tab]");
run("Put Behind [tab]"); 
run("Put Behind [tab]"); 
run("Put Behind [tab]");
run("Put Behind [tab]");
run("Put Behind [tab]");
run("Put Behind [tab]");
run("Put Behind [tab]");
run("Put Behind [tab]"); 
run("Put Behind [tab]");
run("Put Behind [tab]"); 
run("Put Behind [tab]"); 
roiManager("Select", 13);
run("Duplicate...", "duplicate");
run("Put Behind [tab]");
run("Put Behind [tab]"); 
run("Put Behind [tab]");
run("Put Behind [tab]"); 
run("Put Behind [tab]"); 
run("Put Behind [tab]");
run("Put Behind [tab]");
run("Put Behind [tab]");
run("Put Behind [tab]");
run("Put Behind [tab]");
run("Put Behind [tab]"); 
run("Put Behind [tab]");
run("Put Behind [tab]"); 
run("Put Behind [tab]"); 
roiManager("Select", 14);
run("Duplicate...", "duplicate");
run("Put Behind [tab]");
run("Put Behind [tab]");
run("Put Behind [tab]"); 
run("Put Behind [tab]");
run("Put Behind [tab]"); 
run("Put Behind [tab]"); 
run("Put Behind [tab]");
run("Put Behind [tab]");
run("Put Behind [tab]");
run("Put Behind [tab]");
run("Put Behind [tab]");
run("Put Behind [tab]"); 
run("Put Behind [tab]");
run("Put Behind [tab]"); 
run("Put Behind [tab]"); 
roiManager("Select", 15);
run("Duplicate...", "duplicate");
run("Put Behind [tab]");
run("Put Behind [tab]");
run("Put Behind [tab]");
run("Put Behind [tab]"); 
run("Put Behind [tab]");
run("Put Behind [tab]"); 
run("Put Behind [tab]"); 
run("Put Behind [tab]");
run("Put Behind [tab]");
run("Put Behind [tab]");
run("Put Behind [tab]");
run("Put Behind [tab]");
run("Put Behind [tab]"); 
run("Put Behind [tab]");
run("Put Behind [tab]"); 
run("Put Behind [tab]"); 
roiManager("Select", 16);
run("Duplicate...", "duplicate");
run("Put Behind [tab]"); 
run("Put Behind [tab]");
run("Put Behind [tab]");
run("Put Behind [tab]");
run("Put Behind [tab]"); 
run("Put Behind [tab]");
run("Put Behind [tab]"); 
run("Put Behind [tab]"); 
run("Put Behind [tab]");
run("Put Behind [tab]");
run("Put Behind [tab]");
run("Put Behind [tab]");
run("Put Behind [tab]");
run("Put Behind [tab]"); 
run("Put Behind [tab]");
run("Put Behind [tab]"); 
run("Put Behind [tab]"); 
roiManager("Select", 17);
run("Duplicate...", "duplicate");

# On every Roi an automated puncta detection algortihm was run, which 
# subtracted background, applied bandpass and threshold filter before counting puncta of the binarized image.

Stack.setChannel(1);
run("Grays");
run("Subtract Background...", "rolling=8 stack");
run("Bandpass Filter...", "filter_large=200 filter_small=1 suppress=None tolerance=1 autoscale saturate display");
close();
run("Despeckle", "stack");
run("Sharpen", "stack");
run("Subtract Background...", "rolling=8 stack");

setAutoThreshold("Yen dark");
//run("Threshold...");
setOption("BlackBackground", true);
run("Convert to Mask", "method=Yen background=Dark calculate black");
run("Watershed", "slice");
run("Analyze Particles...", "size=10-500 pixel show=[Bare Outlines] display summarize slice");
